<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>embedded | Achu Wilson</title>
    <link>https://achuwilson.github.io/tags/embedded/</link>
      <atom:link href="https://achuwilson.github.io/tags/embedded/index.xml" rel="self" type="application/rss+xml" />
    <description>embedded</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Achu Wilson 2021</copyright><lastBuildDate>Wed, 27 Apr 2011 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://achuwilson.github.io/img/pom-card.png</url>
      <title>embedded</title>
      <link>https://achuwilson.github.io/tags/embedded/</link>
    </image>
    
    <item>
      <title>HAPS</title>
      <link>https://achuwilson.github.io/project/2011-haps/</link>
      <pubDate>Wed, 27 Apr 2011 00:00:00 +0000</pubDate>
      <guid>https://achuwilson.github.io/project/2011-haps/</guid>
      <description>&lt;DIV align=&#34;justify&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;#what-and-why&#34;&gt;What and why&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;#results&#34;&gt;Results&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-and-why&#34;&gt;What and Why&lt;/h2&gt;
&lt;p&gt;This is my undergraduate college project.&lt;/p&gt;
&lt;p&gt;A high altitude platfrom based communication system, which can be rapidly deployed using a balloon is designed and implemented. It is similar to the Project Loon by Google, which was later announced.&lt;/p&gt;
&lt;p&gt;This page will be updated later as time permits and more details are 
&lt;a href=&#34;https://achuwilson.wordpress.com/2012/05/18/long-range-rf-link-using-nrf24l01-rf-transceiver/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;We could not deploy it on a real weather balloon as we were constrained by resources. Instead, the developed system was fixed at the top of a high rise building and we were able to make long distance communication beyond line of sight, using the system as a transponder.&lt;/p&gt;
&lt;p&gt;In addition, we won the &lt;strong&gt;Best Project Award&lt;/strong&gt; from the college for the year of 2012.&lt;/p&gt;
&lt;/DIV&gt;
</description>
    </item>
    
    <item>
      <title>Smart Notice Board</title>
      <link>https://achuwilson.github.io/project/2009-smart_notice_board/</link>
      <pubDate>Sat, 27 Mar 2010 00:00:00 +0000</pubDate>
      <guid>https://achuwilson.github.io/project/2009-smart_notice_board/</guid>
      <description>&lt;DIV align=&#34;justify&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;#what-and-why&#34;&gt;What and why&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#how&#34;&gt;How&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#results&#34;&gt;Results&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-and-why&#34;&gt;What and Why&lt;/h2&gt;
&lt;p&gt;This is another hobby project. Any display solution with a VGA input can be used a the notice board. Users text the messages to be displayed, along with an access code to a predefined number. The system would them display the messgae on the display&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How&lt;/h2&gt;
&lt;p&gt;The system is built around an AVR microcontroller and a GSM modem. The GSM modem has a SIM card provided by the netork provider and can receive text messages. The microcontroller controls the modem and reads the incomming messages through AT commands over a serial port. The user has to send the text message prepended with the security access code. This prevents unauthorized people from spamming the system,&lt;/p&gt;
&lt;p&gt;Once the text to be displayed is received and authenticated. The AVR microcontroller sends it over to the display as a VGA signal. Even though the tiny AVR controller does not have a VGA port, VGA signals are generated by bitbanging through the SPI port.&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;Here is a video of the system in operation.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/sg7snEejMzI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/DIV&gt;
</description>
    </item>
    
    <item>
      <title>Self parking car</title>
      <link>https://achuwilson.github.io/project/2009-self-parking-car/</link>
      <pubDate>Fri, 27 Mar 2009 00:00:00 +0000</pubDate>
      <guid>https://achuwilson.github.io/project/2009-self-parking-car/</guid>
      <description>&lt;DIV align=&#34;justify&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;#what-and-why&#34;&gt;What and why&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#how&#34;&gt;How&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#results&#34;&gt;Result&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-and-why&#34;&gt;What and Why&lt;/h2&gt;
&lt;p&gt;This is a small side project during my undergraduate days, to master embedded systems and robotics skills.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How&lt;/h2&gt;
&lt;p&gt;The robot car consists of IR distance sensors on its sides and wheel encoders. These data streams are fed into a state machine, which looks for empty parking spots. If found any, the state machine would initialize the parking subroutine, and executes a parking maneuver.&lt;/p&gt;
&lt;p&gt;




&lt;img src=&#34;https://achuwilson.github.io/project/2009-self-parking-car/parkingcar_hu08f097a3ed191a1b7d6a8778b58680d4_157737_450x450_fit_q90_lanczos.jpg&#34; width=&#34;450&#34; height=&#34;338&#34; alt=&#34;parking robot car&#34;&gt;

The above image shows the setup used.&lt;/p&gt;
&lt;h2 id=&#34;result&#34;&gt;Result&lt;/h2&gt;
&lt;p&gt;Some trials!

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/GDYHJPsIQ2M&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/DIV&gt;
</description>
    </item>
    
  </channel>
</rss>
